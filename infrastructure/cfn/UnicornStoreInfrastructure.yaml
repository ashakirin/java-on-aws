Metadata:
  cdk_nag:
    rules_to_suppress:
      - reason: The workshop environment does not require API-Gateway authorization
        id: AwsSolutions-APIG4
      - reason: The workshop environment does not require Cognito User Pool authorization
        id: AwsSolutions-COG4
      - reason: Workshop environment does not need a Multi-AZ setup to reduce cost
        id: AwsSolutions-RDS3
      - reason: AWS Managed policies are acceptable for the workshop
        id: AwsSolutions-IAM4
      - reason: A wildcard is acceptable for this workshop to allow parallel creation of resources
        id: AwsSolutions-IAM5
      - reason: Workshop environment is ephemeral and the database should be deleted by the end of the workshop
        id: AwsSolutions-RDS10
      - reason: Database is in a private subnet and can use the default port
        id: AwsSolutions-RDS11
      - reason: API Gateway request validation is not needed for workshop
        id: AwsSolutions-APIG2
      - reason: API Gateway access logging not needed for workshop setup
        id: AwsSolutions-APIG1
      - reason: API Gateway access logging not needed for workshop setup
        id: AwsSolutions-APIG6
      - reason: Workshop environment does not need VPC flow logs
        id: AwsSolutions-VPC7
      - reason: Ephemeral workshop environment does not need to rotate secrets
        id: AwsSolutions-SMG4
      - reason: Workshop non-sensitive test database does not need encryption at rest
        id: AwsSolutions-RDS2
      - reason: Workshop API Gateways do not need AWS WAF assigned
        id: AwsSolutions-APIG3
      - reason: Not needed
        id: AwsSolutions-EC23
      - reason: Workshop Database does not need backups
        id: AwsSolutions-RDS13
      - reason: Workshop S3 bucket does not need Access Logs
        id: AwsSolutions-S1
      - reason: Workshop environment use CDK default Lambdas
        id: AwsSolutions-L1
      - reason: Workshop environment uses user/password authentication
        id: AwsSolutions-RDS6
      - reason: "Suppress warnings see: https://github.com/cdklabs/cdk-nag/issues/817"
        id: CdkNagValidationFailure
Resources:
  InfrastructureConstructUnicornVpc0244F36A:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: UnicornVpc
  InfrastructureConstructUnicornVpcPublicSubnet1Subnet6A91802C:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: UnicornStoreInfrastructure/InfrastructureConstruct/UnicornVpc/PublicSubnet1
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  InfrastructureConstructUnicornVpcPublicSubnet1RouteTable0D6F8C8C:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: UnicornStoreInfrastructure/InfrastructureConstruct/UnicornVpc/PublicSubnet1
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  InfrastructureConstructUnicornVpcPublicSubnet1RouteTableAssociationBE7ACCEC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: InfrastructureConstructUnicornVpcPublicSubnet1RouteTable0D6F8C8C
      SubnetId:
        Ref: InfrastructureConstructUnicornVpcPublicSubnet1Subnet6A91802C
  InfrastructureConstructUnicornVpcPublicSubnet1DefaultRouteCB6C0EC0:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InfrastructureConstructUnicornVpcIGW44EA10FB
      RouteTableId:
        Ref: InfrastructureConstructUnicornVpcPublicSubnet1RouteTable0D6F8C8C
    DependsOn:
      - InfrastructureConstructUnicornVpcVPCGWCC27E56D
  InfrastructureConstructUnicornVpcPublicSubnet1EIPAA889AB1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: UnicornStoreInfrastructure/InfrastructureConstruct/UnicornVpc/PublicSubnet1
  InfrastructureConstructUnicornVpcPublicSubnet1NATGatewayF83F7A6D:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - InfrastructureConstructUnicornVpcPublicSubnet1EIPAA889AB1
          - AllocationId
      SubnetId:
        Ref: InfrastructureConstructUnicornVpcPublicSubnet1Subnet6A91802C
      Tags:
        - Key: Name
          Value: UnicornStoreInfrastructure/InfrastructureConstruct/UnicornVpc/PublicSubnet1
    DependsOn:
      - InfrastructureConstructUnicornVpcPublicSubnet1DefaultRouteCB6C0EC0
      - InfrastructureConstructUnicornVpcPublicSubnet1RouteTableAssociationBE7ACCEC
  InfrastructureConstructUnicornVpcPublicSubnet2Subnet0CE66394:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: UnicornStoreInfrastructure/InfrastructureConstruct/UnicornVpc/PublicSubnet2
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  InfrastructureConstructUnicornVpcPublicSubnet2RouteTableD5B2D624:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: UnicornStoreInfrastructure/InfrastructureConstruct/UnicornVpc/PublicSubnet2
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  InfrastructureConstructUnicornVpcPublicSubnet2RouteTableAssociation9017F3FE:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: InfrastructureConstructUnicornVpcPublicSubnet2RouteTableD5B2D624
      SubnetId:
        Ref: InfrastructureConstructUnicornVpcPublicSubnet2Subnet0CE66394
  InfrastructureConstructUnicornVpcPublicSubnet2DefaultRoute573EAE99:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InfrastructureConstructUnicornVpcIGW44EA10FB
      RouteTableId:
        Ref: InfrastructureConstructUnicornVpcPublicSubnet2RouteTableD5B2D624
    DependsOn:
      - InfrastructureConstructUnicornVpcVPCGWCC27E56D
  InfrastructureConstructUnicornVpcPrivateSubnet1Subnet45D066EC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: UnicornStoreInfrastructure/InfrastructureConstruct/UnicornVpc/PrivateSubnet1
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableC403FD90:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: UnicornStoreInfrastructure/InfrastructureConstruct/UnicornVpc/PrivateSubnet1
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableAssociationA318B51F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableC403FD90
      SubnetId:
        Ref: InfrastructureConstructUnicornVpcPrivateSubnet1Subnet45D066EC
  InfrastructureConstructUnicornVpcPrivateSubnet1DefaultRoute04FC7607:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: InfrastructureConstructUnicornVpcPublicSubnet1NATGatewayF83F7A6D
      RouteTableId:
        Ref: InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableC403FD90
  InfrastructureConstructUnicornVpcPrivateSubnet2SubnetAC5A3291:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: UnicornStoreInfrastructure/InfrastructureConstruct/UnicornVpc/PrivateSubnet2
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAE6618D6:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: UnicornStoreInfrastructure/InfrastructureConstruct/UnicornVpc/PrivateSubnet2
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAssociationA6DE0B20:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAE6618D6
      SubnetId:
        Ref: InfrastructureConstructUnicornVpcPrivateSubnet2SubnetAC5A3291
  InfrastructureConstructUnicornVpcPrivateSubnet2DefaultRoute03E8D500:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: InfrastructureConstructUnicornVpcPublicSubnet1NATGatewayF83F7A6D
      RouteTableId:
        Ref: InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAE6618D6
  InfrastructureConstructUnicornVpcIGW44EA10FB:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: UnicornVpc
  InfrastructureConstructUnicornVpcVPCGWCC27E56D:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InfrastructureConstructUnicornVpcIGW44EA10FB
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  InfrastructureConstructpostgres6200FB70:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"postgres"}'
      Name: unicornstore-db-secret
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  InfrastructureConstructpostgresAttachment44AFD203:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: InfrastructureConstructpostgres6200FB70
      TargetId:
        Ref: InfrastructureConstructUnicornStoreDatabase247AF1D8
      TargetType: AWS::RDS::DBCluster
  InfrastructureConstructDatabaseSG1DACCAF9:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: UnicornStoreInfrastructure/InfrastructureConstruct/DatabaseSG
      GroupName: DatabaseSG
      SecurityGroupEgress:
        - CidrIp: 255.255.255.255/32
          Description: Disallow all traffic
          FromPort: 252
          IpProtocol: icmp
          ToPort: 86
      SecurityGroupIngress:
        - CidrIp: 10.0.0.0/16
          Description: Allow Database Traffic from local network
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  InfrastructureConstructUnicornStoreDatabaseSubnetsB5F79955:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for UnicornStoreDatabase database
      SubnetIds:
        - Ref: InfrastructureConstructUnicornVpcPrivateSubnet1Subnet45D066EC
        - Ref: InfrastructureConstructUnicornVpcPrivateSubnet2SubnetAC5A3291
  InfrastructureConstructUnicornStoreDatabase247AF1D8:
    Type: AWS::RDS::DBCluster
    Properties:
      CopyTagsToSnapshot: true
      DBClusterIdentifier: unicornstoredatabasecluster
      DBClusterParameterGroupName: default.aurora-postgresql16
      DBSubnetGroupName:
        Ref: InfrastructureConstructUnicornStoreDatabaseSubnetsB5F79955
      DatabaseName: unicorns
      EnableHttpEndpoint: true
      Engine: aurora-postgresql
      EngineVersion: "16.4"
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: InfrastructureConstructpostgres6200FB70
            - :SecretString:password::}}
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: InfrastructureConstructpostgres6200FB70
            - :SecretString:username::}}
      Port: 5432
      ServerlessV2ScalingConfiguration:
        MaxCapacity: 4
        MinCapacity: 0.5
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - InfrastructureConstructDatabaseSG1DACCAF9
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
  InfrastructureConstructUnicornStoreDatabaseUnicornStoreDatabaseWriter15E9A4B0:
    Type: AWS::RDS::DBInstance
    Properties:
      AutoMinorVersionUpgrade: true
      DBClusterIdentifier:
        Ref: InfrastructureConstructUnicornStoreDatabase247AF1D8
      DBInstanceClass: db.serverless
      DBInstanceIdentifier: UnicornStoreDatabaseWriter
      Engine: aurora-postgresql
      PromotionTier: 0
      PubliclyAccessible: false
    DependsOn:
      - InfrastructureConstructUnicornVpcPrivateSubnet1DefaultRoute04FC7607
      - InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableAssociationA318B51F
      - InfrastructureConstructUnicornVpcPrivateSubnet2DefaultRoute03E8D500
      - InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAssociationA6DE0B20
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  InfrastructureConstructUnicornEventBusD6FABCB0:
    Type: AWS::Events::EventBus
    Properties:
      Name: unicorns
  InfrastructureConstructApplicationSecurityGroup062C51B9:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: UnicornStoreInfrastructure/InfrastructureConstruct/ApplicationSecurityGroup
      GroupName: applicationSG
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: InfrastructureConstructUnicornVpc0244F36A
  UnicornDatabaseConstructDatabaseSetupFunctionServiceRole106B62D5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - InfrastructureConstructpostgresAttachment44AFD203
      - InfrastructureConstructpostgres6200FB70
      - InfrastructureConstructUnicornStoreDatabase247AF1D8
      - InfrastructureConstructUnicornStoreDatabaseSubnetsB5F79955
      - InfrastructureConstructUnicornStoreDatabaseUnicornStoreDatabaseWriter15E9A4B0
      - InfrastructureConstructUnicornVpcPrivateSubnet1DefaultRoute04FC7607
      - InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableAssociationA318B51F
      - InfrastructureConstructUnicornVpcPrivateSubnet2DefaultRoute03E8D500
      - InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAssociationA6DE0B20
  UnicornDatabaseConstructDatabaseSetupFunctionServiceRoleDefaultPolicy3FC0A7F3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: InfrastructureConstructpostgres6200FB70
          - Action:
              - rds-data:BatchExecuteStatement
              - rds-data:BeginTransaction
              - rds-data:CommitTransaction
              - rds-data:ExecuteStatement
              - rds-data:RollbackTransaction
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":rds:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":cluster:"
                  - Ref: InfrastructureConstructUnicornStoreDatabase247AF1D8
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: InfrastructureConstructpostgresAttachment44AFD203
        Version: "2012-10-17"
      PolicyName: UnicornDatabaseConstructDatabaseSetupFunctionServiceRoleDefaultPolicy3FC0A7F3
      Roles:
        - Ref: UnicornDatabaseConstructDatabaseSetupFunctionServiceRole106B62D5
    DependsOn:
      - InfrastructureConstructpostgresAttachment44AFD203
      - InfrastructureConstructpostgres6200FB70
      - InfrastructureConstructUnicornStoreDatabase247AF1D8
      - InfrastructureConstructUnicornStoreDatabaseSubnetsB5F79955
      - InfrastructureConstructUnicornStoreDatabaseUnicornStoreDatabaseWriter15E9A4B0
      - InfrastructureConstructUnicornVpcPrivateSubnet1DefaultRoute04FC7607
      - InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableAssociationA318B51F
      - InfrastructureConstructUnicornVpcPrivateSubnet2DefaultRoute03E8D500
      - InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAssociationA6DE0B20
  UnicornDatabaseConstructDatabaseSetupFunction8C55B639:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import traceback
          import cfnresponse
          import boto3
          import json

          def get_cluster_arn(cluster_id, region, account_id):
              return f"arn:aws:rds:{region}:{account_id}:cluster:{cluster_id}"

          def lambda_handler(event, context):
              print('Event: {}'.format(event))
              print('context: {}'.format(context))
              responseData = {}
              status = cfnresponse.SUCCESS

              if event['RequestType'] == 'Delete':
                  cfnresponse.send(event, context, status, responseData, 'CustomResourcePhysicalID')
              else:
                  try:
                      # Get secret name and SQL from resource properties
                      secret_name = event['ResourceProperties']['SecretName']
                      sql_statements = event['ResourceProperties']['SqlStatements']

                      # Get AWS account ID and region
                      sts = boto3.client('sts')
                      caller_identity = sts.get_caller_identity()
                      account_id = caller_identity['Account']
                      region = boto3.session.Session().region_name
                      caller_arn = caller_identity['Arn']
                      print(f"Account ID: {account_id}, Region: {region}")
                      print(f"Caller ARN: {caller_arn}")

                      # Get the secret
                      secretsmanager = boto3.client('secretsmanager')
                      secret_details = secretsmanager.describe_secret(
                          SecretId=secret_name
                      )
                      secret_arn = secret_details['ARN']
                      print(f"Secret ARN: {secret_arn}")

                      secret_response = secretsmanager.get_secret_value(
                          SecretId=secret_name
                      )

                      # Parse the secret JSON
                      secret = json.loads(secret_response['SecretString'])
                      # print(f"Secret: {secret}")

                      # Construct cluster ARN
                      cluster_arn = get_cluster_arn(
                          secret['dbClusterIdentifier'],
                          region,
                          account_id
                      )
                      print(f"Cluster ARN: {cluster_arn}")

                      # Initialize RDS Data API client
                      rds_data = boto3.client('rds-data')

                      # Execute each SQL statement
                      for sql in sql_statements.split(';'):
                          sql = sql.strip()
                          if sql:  # Skip empty statements
                              try:
                                  response = rds_data.execute_statement(
                                      resourceArn=cluster_arn,
                                      secretArn=secret_arn,
                                      database=secret['dbname'],
                                      sql=sql
                                  )
                                  print(f"Executed SQL: {sql}")
                                  print(f"Response: {response}")
                              except Exception as sql_error:
                                  print(f"Error executing SQL: {sql}")
                                  print(f"Error: {str(sql_error)}")
                                  raise sql_error

                      responseData = {'Success': 'Finished database setup.'}

                  except Exception as e:
                      status = cfnresponse.FAILED
                      tb_err = traceback.format_exc()
                      print(tb_err)
                      responseData = {'Error': tb_err}
                  finally:
                      cfnresponse.send(event, context, status, responseData, 'CustomResourcePhysicalID')
      FunctionName: database-setup
      Handler: index.lambda_handler
      Role:
        Fn::GetAtt:
          - UnicornDatabaseConstructDatabaseSetupFunctionServiceRole106B62D5
          - Arn
      Runtime: python3.13
      Timeout: 180
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - InfrastructureConstructApplicationSecurityGroup062C51B9
              - GroupId
        SubnetIds:
          - Ref: InfrastructureConstructUnicornVpcPrivateSubnet1Subnet45D066EC
          - Ref: InfrastructureConstructUnicornVpcPrivateSubnet2SubnetAC5A3291
    DependsOn:
      - InfrastructureConstructpostgresAttachment44AFD203
      - InfrastructureConstructpostgres6200FB70
      - InfrastructureConstructUnicornStoreDatabase247AF1D8
      - InfrastructureConstructUnicornStoreDatabaseSubnetsB5F79955
      - InfrastructureConstructUnicornStoreDatabaseUnicornStoreDatabaseWriter15E9A4B0
      - InfrastructureConstructUnicornVpcPrivateSubnet1DefaultRoute04FC7607
      - InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableAssociationA318B51F
      - InfrastructureConstructUnicornVpcPrivateSubnet2DefaultRoute03E8D500
      - InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAssociationA6DE0B20
      - UnicornDatabaseConstructDatabaseSetupFunctionServiceRoleDefaultPolicy3FC0A7F3
      - UnicornDatabaseConstructDatabaseSetupFunctionServiceRole106B62D5
  UnicornDatabaseConstructDatabaseSetupResourceE1449E29:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - UnicornDatabaseConstructDatabaseSetupFunction8C55B639
          - Arn
      SecretName:
        Fn::Join:
          - "-"
          - - Fn::Select:
                - 0
                - Fn::Split:
                    - "-"
                    - Fn::Select:
                        - 6
                        - Fn::Split:
                            - ":"
                            - Ref: InfrastructureConstructpostgres6200FB70
            - Fn::Select:
                - 1
                - Fn::Split:
                    - "-"
                    - Fn::Select:
                        - 6
                        - Fn::Split:
                            - ":"
                            - Ref: InfrastructureConstructpostgres6200FB70
            - Fn::Select:
                - 2
                - Fn::Split:
                    - "-"
                    - Fn::Select:
                        - 6
                        - Fn::Split:
                            - ":"
                            - Ref: InfrastructureConstructpostgres6200FB70
      SqlStatements: CREATE TABLE IF NOT EXISTS unicorns(id TEXT DEFAULT gen_random_uuid() PRIMARY KEY, name TEXT, age TEXT, size TEXT, type TEXT);
    DependsOn:
      - InfrastructureConstructpostgresAttachment44AFD203
      - InfrastructureConstructpostgres6200FB70
      - InfrastructureConstructUnicornStoreDatabase247AF1D8
      - InfrastructureConstructUnicornStoreDatabaseSubnetsB5F79955
      - InfrastructureConstructUnicornStoreDatabaseUnicornStoreDatabaseWriter15E9A4B0
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  UnicornStoreLambdaConstructUnicornStoreSpringFunctionServiceRoleCB4E2591:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - InfrastructureConstructUnicornVpcPrivateSubnet1DefaultRoute04FC7607
      - InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableAssociationA318B51F
      - InfrastructureConstructUnicornVpcPrivateSubnet2DefaultRoute03E8D500
      - InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAssociationA6DE0B20
  UnicornStoreLambdaConstructUnicornStoreSpringFunctionServiceRoleDefaultPolicy0BC98F5F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: events:PutEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - InfrastructureConstructUnicornEventBusD6FABCB0
                - Arn
        Version: "2012-10-17"
      PolicyName: UnicornStoreLambdaConstructUnicornStoreSpringFunctionServiceRoleDefaultPolicy0BC98F5F
      Roles:
        - Ref: UnicornStoreLambdaConstructUnicornStoreSpringFunctionServiceRoleCB4E2591
    DependsOn:
      - InfrastructureConstructUnicornVpcPrivateSubnet1DefaultRoute04FC7607
      - InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableAssociationA318B51F
      - InfrastructureConstructUnicornVpcPrivateSubnet2DefaultRoute03E8D500
      - InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAssociationA6DE0B20
  UnicornStoreLambdaConstructUnicornStoreSpringFunctionEEBBEA2C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |-
          def handler(event, context):
              return 'placeholder'
      Environment:
        Variables:
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
          AWS_SERVERLESS_JAVA_CONTAINER_INIT_GRACE_TIME: "500"
          SPRING_DATASOURCE_HIKARI_maximumPoolSize: "1"
          SPRING_DATASOURCE_URL:
            Fn::Join:
              - ""
              - - jdbc:postgresql://
                - Fn::GetAtt:
                    - InfrastructureConstructUnicornStoreDatabase247AF1D8
                    - Endpoint.Address
                - :5432/unicorns
          SPRING_DATASOURCE_PASSWORD:
            Fn::Join:
              - ""
              - - "{{resolve:secretsmanager:"
                - Ref: InfrastructureConstructpostgres6200FB70
                - :SecretString:password::}}
      FunctionName: unicorn-store-spring
      Handler: com.unicorn.store.StreamLambdaHandler::handleRequest
      MemorySize: 2048
      Role:
        Fn::GetAtt:
          - UnicornStoreLambdaConstructUnicornStoreSpringFunctionServiceRoleCB4E2591
          - Arn
      Runtime: python3.13
      Timeout: 29
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - InfrastructureConstructApplicationSecurityGroup062C51B9
              - GroupId
        SubnetIds:
          - Ref: InfrastructureConstructUnicornVpcPrivateSubnet1Subnet45D066EC
          - Ref: InfrastructureConstructUnicornVpcPrivateSubnet2SubnetAC5A3291
    DependsOn:
      - InfrastructureConstructUnicornVpcPrivateSubnet1DefaultRoute04FC7607
      - InfrastructureConstructUnicornVpcPrivateSubnet1RouteTableAssociationA318B51F
      - InfrastructureConstructUnicornVpcPrivateSubnet2DefaultRoute03E8D500
      - InfrastructureConstructUnicornVpcPrivateSubnet2RouteTableAssociationA6DE0B20
      - UnicornStoreLambdaConstructUnicornStoreSpringFunctionServiceRoleDefaultPolicy0BC98F5F
      - UnicornStoreLambdaConstructUnicornStoreSpringFunctionServiceRoleCB4E2591
  UnicornStoreLambdaConstructUnicornStoreSpringLambdaAliasB0CFAF01:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringFunctionEEBBEA2C
      FunctionVersion: $LATEST
      Name: unicorn-alias
  UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: UnicornStoreSpringApi
  UnicornStoreLambdaConstructUnicornStoreSpringApiCloudWatchRole867F3FFC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  UnicornStoreLambdaConstructUnicornStoreSpringApiAccount1BF79504:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - UnicornStoreLambdaConstructUnicornStoreSpringApiCloudWatchRole867F3FFC
          - Arn
    DependsOn:
      - UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  UnicornStoreLambdaConstructUnicornStoreSpringApiDeploymentFC46E1AEc14eb4e39b8b87c63d7cf12e115a754f:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
    DependsOn:
      - UnicornStoreLambdaConstructUnicornStoreSpringApiproxyANYF7ED0BFE
      - UnicornStoreLambdaConstructUnicornStoreSpringApiproxy9EE2AA75
      - UnicornStoreLambdaConstructUnicornStoreSpringApiANYD0A8644A
  UnicornStoreLambdaConstructUnicornStoreSpringApiDeploymentStageprodD9B4A192:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiDeploymentFC46E1AEc14eb4e39b8b87c63d7cf12e115a754f
      RestApiId:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
      StageName: prod
    DependsOn:
      - UnicornStoreLambdaConstructUnicornStoreSpringApiAccount1BF79504
  UnicornStoreLambdaConstructUnicornStoreSpringApiproxy9EE2AA75:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
          - RootResourceId
      PathPart: "{proxy+}"
      RestApiId:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
  UnicornStoreLambdaConstructUnicornStoreSpringApiproxyANYApiPermissionUnicornStoreInfrastructureUnicornStoreLambdaConstructUnicornStoreSpringApiEB3ACC02ANYproxy1600E16D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringLambdaAliasB0CFAF01
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
            - /
            - Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiDeploymentStageprodD9B4A192
            - /*/*
  UnicornStoreLambdaConstructUnicornStoreSpringApiproxyANYApiPermissionTestUnicornStoreInfrastructureUnicornStoreLambdaConstructUnicornStoreSpringApiEB3ACC02ANYproxyB3878B1B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringLambdaAliasB0CFAF01
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
            - /test-invoke-stage/*/*
  UnicornStoreLambdaConstructUnicornStoreSpringApiproxyANYF7ED0BFE:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: ANY
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Ref: UnicornStoreLambdaConstructUnicornStoreSpringLambdaAliasB0CFAF01
              - /invocations
      ResourceId:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiproxy9EE2AA75
      RestApiId:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
  UnicornStoreLambdaConstructUnicornStoreSpringApiANYApiPermissionUnicornStoreInfrastructureUnicornStoreLambdaConstructUnicornStoreSpringApiEB3ACC02ANYAD6CDCD3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringLambdaAliasB0CFAF01
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
            - /
            - Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiDeploymentStageprodD9B4A192
            - /*/
  UnicornStoreLambdaConstructUnicornStoreSpringApiANYApiPermissionTestUnicornStoreInfrastructureUnicornStoreLambdaConstructUnicornStoreSpringApiEB3ACC02ANY22D7A90C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringLambdaAliasB0CFAF01
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
            - /test-invoke-stage/*/
  UnicornStoreLambdaConstructUnicornStoreSpringApiANYD0A8644A:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: ANY
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Ref: UnicornStoreLambdaConstructUnicornStoreSpringLambdaAliasB0CFAF01
              - /invocations
      ResourceId:
        Fn::GetAtt:
          - UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
          - RootResourceId
      RestApiId:
        Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
  UnicornStoreLambdaConstructLambdaCodeBucket22C68EA6:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  UnicornStoreLambdaConstructLambdaCodeBucketPolicy6E336D4A:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: UnicornStoreLambdaConstructLambdaCodeBucket22C68EA6
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - UnicornStoreLambdaConstructLambdaCodeBucket22C68EA6
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - UnicornStoreLambdaConstructLambdaCodeBucket22C68EA6
                        - Arn
                    - /*
        Version: "2012-10-17"
Outputs:
  InfrastructureConstructUnicornStoreVpcId11FB2461:
    Value:
      Ref: InfrastructureConstructUnicornVpc0244F36A
  UnicornStoreLambdaConstructUnicornStoreSpringApiEndpoint648F1C11:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiDeploymentStageprodD9B4A192
          - /
  UnicornStoreLambdaConstructunicornstorespringfunctionarnF4E105B9:
    Value:
      Fn::GetAtt:
        - UnicornStoreLambdaConstructUnicornStoreSpringFunctionEEBBEA2C
        - Arn
  UnicornStoreLambdaConstructApiEndpointSpringE4A63641:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiE5B1A78E
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: UnicornStoreLambdaConstructUnicornStoreSpringApiDeploymentStageprodD9B4A192
          - /
  UnicornStoreLambdaConstructBucketLambdaCode53E5CF58:
    Value:
      Ref: UnicornStoreLambdaConstructLambdaCodeBucket22C68EA6

