spring.application.name=assistant
logging.level.org.springframework.ai: DEBUG

# Simplified logging pattern - only show the message
logging.pattern.console=%msg%n

# Amazon Bedrock Configuration
spring.ai.bedrock.aws.region=us-east-1
# spring.ai.bedrock.aws.region=eu-central-1
spring.ai.bedrock.converse.chat.options.max-tokens=10000

# Model Configuration
# spring.ai.bedrock.converse.chat.options.model=us.amazon.nova-lite-v1:0
# spring.ai.bedrock.converse.chat.options.model=amazon.nova-pro-v1:0
spring.ai.bedrock.converse.chat.options.model=us.anthropic.claude-3-7-sonnet-20250219-v1:0
# spring.ai.bedrock.converse.chat.options.model=us.anthropic.claude-sonnet-4-20250514-v1:0

# Thymeleaf Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/assistant_db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JDBC Memory properties
spring.ai.chat.memory.repository.jdbc.initialize-schema=always

# RAG properties
spring.ai.model.embedding=bedrock-titan
spring.ai.bedrock.titan.embedding.model=amazon.titan-embed-text-v2:0
spring.ai.bedrock.titan.embedding.input-type=text

spring.ai.vectorstore.pgvector.initialize-schema=true
spring.ai.vectorstore.pgvector.dimensions=1024

# MCP Client properties
spring.ai.mcp.client.toolcallback.enabled=true
# SPRING_AI_MCP_CLIENT_SSE_CONNECTIONS_SERVER1_URL=http://localhost:8081
spring.ai.mcp.client.sse.connections.server1.url=http://localhost:8081
spring.ai.mcp.client.sse.connections.server2.url=http://localhost:8082

# Debugging
# spring.ai.chat.observations.log-prompt=true
spring.ai.chat.observations.log-completion=true
spring.ai.chat.observations.include-error-logging=true
spring.ai.tools.observations.include-content=true
# spring.ai.vectorstore.observations.log-query-response=true